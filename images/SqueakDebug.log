Error: No content to install29 May 2014 5:18:23.46 pmVM: unix - SmalltalkImage: Squeak4.5 [latest update: #13680]SecurityManager state:Restricted: falseFileAccess: trueSocketAccess: trueWorking Dir /home/hub/hpi/s3s/signals/imagesTrusted Dir /home/hub/hpi/s3s/signals/images/secureUntrusted Dir /home/hub/hpi/s3s/signals/images/My SqueakCodeLoader(Object)>>error:	Receiver: a CodeLoader	Arguments and temporary variables: 		aString: 	'No content to install'	Receiver's instance variables: 		baseURL: 	''		sourceFiles: 	{a HTTPDownloadRequest}		segments: 	nil		publicKey: 	nilCodeLoader>>installSourceFile:	Receiver: a CodeLoader	Arguments and temporary variables: 		aStream: 	nil		contents: 	nil		trusted: 	nil	Receiver's instance variables: 		baseURL: 	''		sourceFiles: 	{a HTTPDownloadRequest}		segments: 	nil		publicKey: 	nil[] in CodeLoader>>installSourceFiles	Receiver: a CodeLoader	Arguments and temporary variables: 		req: 	a HTTPDownloadRequest	Receiver's instance variables: 		baseURL: 	''		sourceFiles: 	{a HTTPDownloadRequest}		segments: 	nil		publicKey: 	nilArray(SequenceableCollection)>>do:	Receiver: {a HTTPDownloadRequest}	Arguments and temporary variables: 		aBlock: 	[closure] in CodeLoader>>installSourceFiles		index: 	1		indexLimiT: 	1	Receiver's instance variables: {a HTTPDownloadRequest}CodeLoader>>installSourceFiles	Receiver: a CodeLoader	Arguments and temporary variables: 	Receiver's instance variables: 		baseURL: 	''		sourceFiles: 	{a HTTPDownloadRequest}		segments: 	nil		publicKey: 	nilProjectLauncher>>startUpAfterLogin	Receiver: a ProjectLauncher	Arguments and temporary variables: 		scriptName: 	'file:///install.st'		loader: 	a CodeLoader		isUrl: 	false		encodedPath: 	'/install.st'		pathTokens: 	#('' 'install.st')	Receiver's instance variables: 		parameters: 	a Dictionary()		showSplash: 	true		splashURL: 	nil		whichFlaps: 	nil		eToyAuthentificationServer: 	nilProjectLauncher>>startUp	Receiver: a ProjectLauncher	Arguments and temporary variables: 	Receiver's instance variables: 		parameters: 	a Dictionary()		showSplash: 	true		splashURL: 	nil		whichFlaps: 	nil		eToyAuthentificationServer: 	nil[] in [] in [] in AutoStart class>>startUp:	Receiver: AutoStart	Arguments and temporary variables: <<error during printing>	Receiver's instance variables: 		superclass: 	Object		methodDict: 	a MethodDictionary()		format: 	132		instanceVariables: 	#('parameters')		organization: 	('as yet unclassified')		subclasses: 	nil		name: 	#AutoStart		classPool: 	a Dictionary(#Active->true #InstalledLaunchers->an OrderedCollection...etc...		sharedPools: 	nil		environment: 	Smalltalk		category: 	#'System-Support'WorldState>>runStepMethodsIn:	Receiver: a WorldState	Arguments and temporary variables: 		aWorld: 	a PasteUpMorph(1622) [world]		queue: 	a SharedQueue(0)		msg: 	[closure] in [] in [] in AutoStart class>>startUp:		limit: 	200		stamp: 	101	Receiver's instance variables: 		hands: 	{a HandMorph(3216)}		activeHand: 	a HandMorph(3216)		viewBox: 	0@0 corner: 796@600		canvas: 	a FormCanvas on: DisplayScreen(796x600x32)		damageRecorder: 	a DamageRecorder		stepList: 	a Heap(StepMessage(#stepAt: -> a ClockMorph(1212)'5:18:23 pm')(a Cloc...etc...		lastStepTime: 	1103		lastStepMessage: 	nil		lastCycleTime: 	1103		commandHistory: 	a CommandHistory		alarms: 	a MorphicAlarmQueue()		lastAlarmTime: 	1103		remoteServer: 	nil		multiCanvas: 	nilPasteUpMorph>>runStepMethods	Receiver: a PasteUpMorph(1622) [world]	Arguments and temporary variables: 	Receiver's instance variables: 		bounds: 	0@0 corner: 796@600		owner: 	nil		submorphs: 	{a DockingBarMorph(454)}		fullBounds: 	0@0 corner: 796@600		color: 	an InfiniteForm		extension: 	a MorphExtension (2543) [eventHandler = an EventHandler]  [other:  (...etc...		borderWidth: 	0		borderColor: 	(Color r: 0.515 g: 0.181 b: 0.263)		presenter: 	an EtoysPresenter (3797)		model: 	a MorphicModel(3376)		cursor: 	1		padding: 	3		backgroundMorph: 	nil		turtleTrailsForm: 	nil		turtlePen: 	nil		lastTurtlePositions: 	nil		isPartsBin: 	nil		indicateCursor: 	nil		wantsMouseOverHalos: 	nil		worldState: 	a WorldState		griddingOn: 	nilWorldState>>doOneCycleNowFor:	Receiver: a WorldState	Arguments and temporary variables: 		aWorld: 	a PasteUpMorph(1622) [world]		capturingGesture: 	#(false)	Receiver's instance variables: 		hands: 	{a HandMorph(3216)}		activeHand: 	a HandMorph(3216)		viewBox: 	0@0 corner: 796@600		canvas: 	a FormCanvas on: DisplayScreen(796x600x32)		damageRecorder: 	a DamageRecorder		stepList: 	a Heap(StepMessage(#stepAt: -> a ClockMorph(1212)'5:18:23 pm')(a Cloc...etc...		lastStepTime: 	1103		lastStepMessage: 	nil		lastCycleTime: 	1103		commandHistory: 	a CommandHistory		alarms: 	a MorphicAlarmQueue()		lastAlarmTime: 	1103		remoteServer: 	nil		multiCanvas: 	nilWorldState>>doOneCycleFor:	Receiver: a WorldState	Arguments and temporary variables: 		aWorld: 	a PasteUpMorph(1622) [world]	Receiver's instance variables: 		hands: 	{a HandMorph(3216)}		activeHand: 	a HandMorph(3216)		viewBox: 	0@0 corner: 796@600		canvas: 	a FormCanvas on: DisplayScreen(796x600x32)		damageRecorder: 	a DamageRecorder		stepList: 	a Heap(StepMessage(#stepAt: -> a ClockMorph(1212)'5:18:23 pm')(a Cloc...etc...		lastStepTime: 	1103		lastStepMessage: 	nil		lastCycleTime: 	1103		commandHistory: 	a CommandHistory		alarms: 	a MorphicAlarmQueue()		lastAlarmTime: 	1103		remoteServer: 	nil		multiCanvas: 	nilPasteUpMorph>>doOneCycle	Receiver: a PasteUpMorph(1622) [world]	Arguments and temporary variables: 	Receiver's instance variables: 		bounds: 	0@0 corner: 796@600		owner: 	nil		submorphs: 	{a DockingBarMorph(454)}		fullBounds: 	0@0 corner: 796@600		color: 	an InfiniteForm		extension: 	a MorphExtension (2543) [eventHandler = an EventHandler]  [other:  (...etc...		borderWidth: 	0		borderColor: 	(Color r: 0.515 g: 0.181 b: 0.263)		presenter: 	an EtoysPresenter (3797)		model: 	a MorphicModel(3376)		cursor: 	1		padding: 	3		backgroundMorph: 	nil		turtleTrailsForm: 	nil		turtlePen: 	nil		lastTurtlePositions: 	nil		isPartsBin: 	nil		indicateCursor: 	nil		wantsMouseOverHalos: 	nil		worldState: 	a WorldState		griddingOn: 	nil[] in MorphicProject>>spawnNewProcess	Receiver: a MorphicProject (Unnamed1) in a PasteUpMorph(1622) [world]	Arguments and temporary variables: 	Receiver's instance variables: 		dependents: 	nil		world: 	a PasteUpMorph(1622) [world]		uiManager: 	a MorphicUIManager		changeSet: 	a ChangeSet named Unnamed1		transcript: 	a TranscriptStream		parentProject: 	a MorphicProject (Unnamed1) in a PasteUpMorph(1622) [world]		previousProject: 	nil		displayDepth: 	32		viewSize: 	151@132		thumbnail: 	Form(151x132x32)		nextProject: 	nil		guards: 	nil		projectParameters: 	an IdentityDictionary(#PrevailingProjectFlags->an IdentityDi...etc...		version: 	nil		urlList: 	nil		environment: 	nil		lastDirectory: 	nil		lastSavedAtSeconds: 	nil		projectPreferenceFlagDictionary: 	an IdentityDictionary(#showSharedFlaps->true #...etc...		resourceManager: 	a ResourceManager		uiProcess: 	a Process in [] in Delay>>wait[] in BlockClosure>>newProcess	Receiver: [closure] in MorphicProject>>spawnNewProcess	Arguments and temporary variables: 	Receiver's instance variables: 		outerContext: 	MorphicProject>>spawnNewProcess		startpc: 	53		numArgs: 	0--- The full stack ---CodeLoader(Object)>>error:CodeLoader>>installSourceFile:[] in CodeLoader>>installSourceFilesArray(SequenceableCollection)>>do:CodeLoader>>installSourceFilesProjectLauncher>>startUpAfterLoginProjectLauncher>>startUp[] in [] in [] in AutoStart class>>startUp:WorldState>>runStepMethodsIn:PasteUpMorph>>runStepMethodsWorldState>>doOneCycleNowFor:WorldState>>doOneCycleFor:PasteUpMorph>>doOneCycle[] in MorphicProject>>spawnNewProcess[] in BlockClosure>>newProcess